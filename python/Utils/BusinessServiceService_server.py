##################################################
# file: BusinessServiceService_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /usr/bin/wsdl2py http://www.jianzhou.sh.cn/JianzhouSMSWSServer/services/BusinessService?wsdl
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from BusinessServiceService_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
getReceivedMsg = GED("http://service.nineorange.com", "getReceivedMsg").pyclass

getReceivedMsgResponse = GED("http://service.nineorange.com", "getReceivedMsgResponse").pyclass

sendBatchMessageTimelyExt = GED("http://service.nineorange.com", "sendBatchMessageTimelyExt").pyclass

sendBatchMessageTimelyExtResponse = GED("http://service.nineorange.com", "sendBatchMessageTimelyExtResponse").pyclass

sendPersonalMessages = GED("http://service.nineorange.com", "sendPersonalMessages").pyclass

sendPersonalMessagesResponse = GED("http://service.nineorange.com", "sendPersonalMessagesResponse").pyclass

modifyPassword = GED("http://service.nineorange.com", "modifyPassword").pyclass

modifyPasswordResponse = GED("http://service.nineorange.com", "modifyPasswordResponse").pyclass

getReceipt = GED("http://service.nineorange.com", "getReceipt").pyclass

getReceiptResponse = GED("http://service.nineorange.com", "getReceiptResponse").pyclass

sendBatchMessage = GED("http://service.nineorange.com", "sendBatchMessage").pyclass

sendBatchMessageResponse = GED("http://service.nineorange.com", "sendBatchMessageResponse").pyclass

sendGjBatchMessage = GED("http://service.nineorange.com", "sendGjBatchMessage").pyclass

sendGjBatchMessageResponse = GED("http://service.nineorange.com", "sendGjBatchMessageResponse").pyclass

validateUser = GED("http://service.nineorange.com", "validateUser").pyclass

validateUserResponse = GED("http://service.nineorange.com", "validateUserResponse").pyclass

sendMessage = GED("http://service.nineorange.com", "sendMessage").pyclass

sendMessageResponse = GED("http://service.nineorange.com", "sendMessageResponse").pyclass

sendTimelyMessage = GED("http://service.nineorange.com", "sendTimelyMessage").pyclass

sendTimelyMessageResponse = GED("http://service.nineorange.com", "sendTimelyMessageResponse").pyclass

gxmt = GED("http://service.nineorange.com", "gxmt").pyclass

gxmtResponse = GED("http://service.nineorange.com", "gxmtResponse").pyclass

sendMmsMessages = GED("http://service.nineorange.com", "sendMmsMessages").pyclass

sendMmsMessagesResponse = GED("http://service.nineorange.com", "sendMmsMessagesResponse").pyclass

getUserInfo = GED("http://service.nineorange.com", "getUserInfo").pyclass

getUserInfoResponse = GED("http://service.nineorange.com", "getUserInfoResponse").pyclass

sendAudio = GED("http://service.nineorange.com", "sendAudio").pyclass

sendAudioResponse = GED("http://service.nineorange.com", "sendAudioResponse").pyclass


# Service Skeletons
class BusinessServiceService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/JianzhouSMSWSServer/services/BusinessService', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_getReceivedMsg(self, ps, **kw):
        request = ps.Parse(getReceivedMsg.typecode)
        return request,getReceivedMsgResponse()

    soapAction[''] = 'soap_getReceivedMsg'
    root[(getReceivedMsg.typecode.nspname,getReceivedMsg.typecode.pname)] = 'soap_getReceivedMsg'

    def soap_sendBatchMessageTimelyExt(self, ps, **kw):
        request = ps.Parse(sendBatchMessageTimelyExt.typecode)
        return request,sendBatchMessageTimelyExtResponse()

    soapAction[''] = 'soap_sendBatchMessageTimelyExt'
    root[(sendBatchMessageTimelyExt.typecode.nspname,sendBatchMessageTimelyExt.typecode.pname)] = 'soap_sendBatchMessageTimelyExt'

    def soap_sendPersonalMessages(self, ps, **kw):
        request = ps.Parse(sendPersonalMessages.typecode)
        return request,sendPersonalMessagesResponse()

    soapAction[''] = 'soap_sendPersonalMessages'
    root[(sendPersonalMessages.typecode.nspname,sendPersonalMessages.typecode.pname)] = 'soap_sendPersonalMessages'

    def soap_modifyPassword(self, ps, **kw):
        request = ps.Parse(modifyPassword.typecode)
        return request,modifyPasswordResponse()

    soapAction[''] = 'soap_modifyPassword'
    root[(modifyPassword.typecode.nspname,modifyPassword.typecode.pname)] = 'soap_modifyPassword'

    def soap_getReceipt(self, ps, **kw):
        request = ps.Parse(getReceipt.typecode)
        return request,getReceiptResponse()

    soapAction[''] = 'soap_getReceipt'
    root[(getReceipt.typecode.nspname,getReceipt.typecode.pname)] = 'soap_getReceipt'

    def soap_sendBatchMessage(self, ps, **kw):
        request = ps.Parse(sendBatchMessage.typecode)
        return request,sendBatchMessageResponse()

    soapAction[''] = 'soap_sendBatchMessage'
    root[(sendBatchMessage.typecode.nspname,sendBatchMessage.typecode.pname)] = 'soap_sendBatchMessage'

    def soap_sendGjBatchMessage(self, ps, **kw):
        request = ps.Parse(sendGjBatchMessage.typecode)
        return request,sendGjBatchMessageResponse()

    soapAction[''] = 'soap_sendGjBatchMessage'
    root[(sendGjBatchMessage.typecode.nspname,sendGjBatchMessage.typecode.pname)] = 'soap_sendGjBatchMessage'

    def soap_validateUser(self, ps, **kw):
        request = ps.Parse(validateUser.typecode)
        return request,validateUserResponse()

    soapAction[''] = 'soap_validateUser'
    root[(validateUser.typecode.nspname,validateUser.typecode.pname)] = 'soap_validateUser'

    def soap_sendMessage(self, ps, **kw):
        request = ps.Parse(sendMessage.typecode)
        return request,sendMessageResponse()

    soapAction[''] = 'soap_sendMessage'
    root[(sendMessage.typecode.nspname,sendMessage.typecode.pname)] = 'soap_sendMessage'

    def soap_sendTimelyMessage(self, ps, **kw):
        request = ps.Parse(sendTimelyMessage.typecode)
        return request,sendTimelyMessageResponse()

    soapAction[''] = 'soap_sendTimelyMessage'
    root[(sendTimelyMessage.typecode.nspname,sendTimelyMessage.typecode.pname)] = 'soap_sendTimelyMessage'

    def soap_gxmt(self, ps, **kw):
        request = ps.Parse(gxmt.typecode)
        return request,gxmtResponse()

    soapAction[''] = 'soap_gxmt'
    root[(gxmt.typecode.nspname,gxmt.typecode.pname)] = 'soap_gxmt'

    def soap_sendMmsMessages(self, ps, **kw):
        request = ps.Parse(sendMmsMessages.typecode)
        return request,sendMmsMessagesResponse()

    soapAction[''] = 'soap_sendMmsMessages'
    root[(sendMmsMessages.typecode.nspname,sendMmsMessages.typecode.pname)] = 'soap_sendMmsMessages'

    def soap_getUserInfo(self, ps, **kw):
        request = ps.Parse(getUserInfo.typecode)
        return request,getUserInfoResponse()

    soapAction[''] = 'soap_getUserInfo'
    root[(getUserInfo.typecode.nspname,getUserInfo.typecode.pname)] = 'soap_getUserInfo'

    def soap_sendAudio(self, ps, **kw):
        request = ps.Parse(sendAudio.typecode)
        return request,sendAudioResponse()

    soapAction[''] = 'soap_sendAudio'
    root[(sendAudio.typecode.nspname,sendAudio.typecode.pname)] = 'soap_sendAudio'

